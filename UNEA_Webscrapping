### The aim of this file is to extract information from companies 
### that support disabled workers and/or are dedicated to training individuals to reintegrate into the workforce
### We can then push information internally, and increase using of disabled workers

### the following code are cut into several parts, in order to make easy adjustments 

### chargement des librairies utiles

from bs4 import BeautifulSoup
import requests
import csv

import urllib.request
import urllib.error
import bs4

import re

import pandas as pd

### Partie 1 : récupération des URLs

rurl=requests.get('https://www.unea.fr/annuaire-des-entreprises-adaptees?sector=0&section=0&activity=0&keyword=&region=&lat=&lng=&autocomplete_selected=&form_build_id=form-qYY-_LbpYQE7EtvYA_TQaQlyQ0uNpAuJL0xts0cvpmg&form_id=ecedi_list_filter_form').text
soupurl = BeautifulSoup(rurl)
print(soupurl.prettify())

### nom des entreprises et url OK

ListNomEntreprise = []
ListUrlEntreprise = []

for Nom in soupurl.find_all('div', class_='field field-name-title field-type-ds field-label-hidden'):
    
    #NomEntreprise = Nom.div.div.h2.a.text
    #print(NomEntreprise)
    ListNomEntreprise.append(Nom.div.div.h2.a.text)
    
    href1=str(Nom.div.div.h2.a.attrs)
    hrefEntreprise = 'https://www.unea.fr' + href1[10:-2]
    #print(hrefEntreprise)
    ListUrlEntreprise.append(hrefEntreprise)

#ListNomEntreprise
#ListUrlEntreprise
    
df = pd.DataFrame({'Entreprise': ListNomEntreprise, 'URL': ListUrlEntreprise})
df

### nom des localisation OK

ListLieuEntreprise=[]

for Lieu in soupurl.find_all('div', class_='field field-name-field-zipcode-town field-type-ds field-label-hidden'):
    LieuEntreprise = Lieu.text
    LieuEntreprise = re.sub('\n', '', LieuEntreprise)
    #print(LieuEntreprise)
    ListLieuEntreprise.append(LieuEntreprise)

#ListLieuEntreprise

df['Localisation']=ListLieuEntreprise
print(len(df))
df

### Partie 2 : récupération des détails


ListactiviteResume = []

for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)


    try : 
        activite_resume = soup.find(class_="field field-name-body field-type-text-with-summary field-label-hidden").text
        activite_resume = re.sub('\n', '', activite_resume)
        #print(activite_resume)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        activite_resume=("NR")
        #print(activite_resume)
    ListactiviteResume.append(activite_resume)

df["ActiviteResume"] = ListactiviteResume
#print(len(df))
df

### activité OK


ListActiviteDetails = []

for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        activite_details=soup.find('div', class_="field-sectors").ul.text
        activite_details = re.sub('\n', '', activite_details)
        #print(activite_details)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        activite_details=("NR")
        #print(activite_details)
    ListActiviteDetails.append(activite_details)

df["ActiviteDetails"] = ListActiviteDetails
#print(len(df))
df

### adresse du fournisseur OK

ListAdresse1 = []
ListAdresse2 = []
ListAdresse3 = []

for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        adresse1=soup.find('div', class_="field field-name-field-address1 field-type-text field-label-hidden").text
        adresse1 = re.sub('\n', '', adresse1)
        #print(adresse1)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        adresse1=("NR")
        #print(adresse1)
    ListAdresse1.append(adresse1)

    try : 
        adresse2=soup.find('div', class_="field field-name-field-zipcode field-type-text field-label-hidden").text
        adresse2 = re.sub('\n', '', adresse2)
        #print(adresse2)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        adresse2=("NR")
        #print(adresse2)
    ListAdresse2.append(adresse2)
    
    try : 
        adresse3=soup.find('div', class_="field field-name-field-town field-type-text field-label-hidden").text
        adresse3 = re.sub('\n', '', adresse3)
        #print(adresse3)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        adresse3=("NR")
        #print(adresse3)
    ListAdresse3.append(adresse3)
    
    

df["Adresse1"] = ListAdresse1
df["Adresse2"] = ListAdresse2
df["Adresse3"] = ListAdresse3

#print(len(df))
df

### tel et fax OK

ListTel = []
ListFax = []



for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        tel=soup.find('div', class_="field field-name-field-phone field-type-text field-label-inline clearfix").find('div', class_="field-item even").text
        #print(tel)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        tel=("NR")
        #print(tel)
    ListTel.append(tel)

    try : 
        fax=soup.find('div', class_="field field-name-field-fax field-type-text field-label-inline clearfix").find('div', class_="field-item even").text
        #print(fax)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        fax=("NR")
        #print(fax)
    ListFax.append(fax)
    


df["Telephone"] = ListTel
df["Fax"] = ListFax

#print(len(df))
df



### email OK


ListEmail = []


for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        email=soup.find('div', class_="link-contact").find('a').text
        #print(email)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        email=("NR")
        #print(email)
    ListEmail.append(email)


df["Email"] = ListEmail

#print(len(df))
df


### adresse web OK


ListWeb = []



for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        web=soup.find('div', class_="field field-name-field-website field-type-link-field field-label-hidden").text
        web = re.sub('\n', '', web)
        #print(web)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        web=("NR")
        print(web)
    ListWeb.append(web)


df["Web"] = ListWeb

#print(len(df))
df

### nbre salariés OK

   
    
ListSalaries = []



for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        rh =soup.find('div', class_="field field-name-field-workforce field-type-number-integer field-label-hidden").text
        rh = re.sub('\n', '', rh)
        #print(rh)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        rh=("NR")
        #print(rh)
    ListSalaries.append(rh)


df["NbSalaries"] = ListSalaries

#print(len(df))
df

### num siret OK



ListSiret = []


for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        siret=soup.find('div', class_="field field-name-field-siret field-type-text field-label-above").find('div', class_="field-item even").text
        #print(siret)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        siret=("NR")
        #print(siret)
    ListSiret.append(siret)


df["SIRET"] = ListSiret

#print(len(df))
df


### certification OK

ListCertifications = []


for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        certificat=soup.find('div', class_="field field-name-field-certifications field-type-text-long field-label-above").find('div', class_="field-item even").text
        #print(certificat)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        certificat=("NR")
        #print(certificat)
    ListCertifications.append(certificat)


df["Certifications"] = ListCertifications

#print(len(df))
df


### contact OK

ListContactNom = []
ListContactPrenom = []
ListContactFct = []
ListContactTel = []

for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        contact_prenom=soup.find('div', class_="field field-name-field-leader-firstname field-type-text field-label-hidden").find('div', class_="field-item even").text
        #print(contact_prenom)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        contact_prenom=("NR")
        #print(contact_prenom)
    ListContactPrenom.append(contact_prenom)

    try : 
        contact_nom=soup.find('div', class_="field field-name-field-leader-name field-type-text field-label-hidden").find('div', class_="field-item even").text
        #print(contact_nom)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        contact_nom=("NR")
        #print(contact_nom)
    ListContactNom.append(contact_nom)

    try : 
        contact_fct=soup.find('div', class_="field field-name-field-leader-capacity field-type-text field-label-hidden").find('div', class_="field-item even").text
        #print(contact_fct)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        contact_fct=("NR")
        #print(contact_fct)
    ListContactFct.append(contact_fct)
    
    try : 
        contact_tel=soup.find('div', class_="field field-name-field-leader-phone field-type-text field-label-inline clearfix").find('div', class_="field-item even").text
        #print(contact_tel)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        contact_tel=("NR")
        #print(contact_tel)
    ListContactTel.append(contact_tel)
        


df["Contact_Prenom"] = ListContactPrenom
df["Contact_Nom"] = ListContactNom
df["Contact_Fonction"] = ListContactFct
df["Contact_Tel"] = ListContactTel

#print(len(df))
df

### clients principaux OK

    
    
ListClients = []


for i in range(len(ListUrlEntreprise)):
    
    #print(i)
    #r=requests.get(ListUrlEntreprise[i])
    #soup = BeautifulSoup(r)
    #print(soup.prettify())
    
    url=ListUrlEntreprise[i]
    source = urllib.request.urlopen(url).read()
    soup = bs4.BeautifulSoup(source)

    
    try : 
        clients=soup.find('div', class_="field field-name-field-main-customers field-type-text-long field-label-hidden").find('div', class_="field-item even").text
        clients = re.sub('\n', '', clients)
        #print(clients)
    except (RuntimeError, TypeError, NameError, SyntaxError, AttributeError) :
        clients=("NR")
        #print(clients)
    ListClients.append(clients)


df["Clients"] = ListClients

#print(len(df))
df


### enregistrement

df.to_csv (r'C:\Users\Hyboui\Desktop\export_unea.csv', index = True, header=True)
df.to_excel (r'C:\Users\Hyboui\Desktop\export_unea.xlsx', index = True, header=True)
df.iloc[125:130,:]
#df.loc[df['ActiviteResume']!="NR", :]
